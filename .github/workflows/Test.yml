---
name: Test

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 5
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Windows
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup devcmd to use cl.exe
        uses: ilammy/msvc-dev-cmd@v1

      - name: Create build directory
        shell: bash
        run: |
          mkdir build

      - name: CMake Setup on Windows
        shell: bash
        working-directory: build
        run: |
          cmake --version
          cmake ..

      - name: Build
        shell: bash
        working-directory: build
        continue-on-error: true
        run: |
          export UseMultiToolTask=true
          cmake --build . --config Release

      - name: Package
        working-directory: build
        continue-on-error: true
        run: |
          cpack -V
      - uses: actions/upload-artifact@v3
        with:
          name: wix.log
          path: build/dist/_CPack_Packages/win64/WIX/wix.log
      - uses: actions/upload-artifact@v3
        with:
          name: Greeting-Win
          path: build/dist/Greeting-Win.msi
      - uses: actions/upload-artifact@v3
        with:
          name: CPack
          path: build/dist/_CPack_Packages/

      - name: Install package
        working-directory: build/dist
        continue-on-error: true
        run: |
          $Env:Path
          [Environment]::GetEnvironmentVariable("Path","User")
          [Environment]::GetEnvironmentVariable("Path","System")
          msiexec /i D:\a\cmakewix\cmakewix\build\dist\Greeting-Win.msi /quiet /norestart /L*vx .\msi.log ADD_SRCML_TO_PATH=User LOGVERBOSE=1
          $Env:Path
          [Environment]::GetEnvironmentVariable("Path","User")
          [Environment]::GetEnvironmentVariable("Path","System")

      - uses: actions/upload-artifact@v3
        with:
          name: msi.log
          path: build/dist/msi.log

      - name: Clean build
        working-directory: build
        continue-on-error: true
        run: |
          cmake --build . --config Release --target clean
          cmake .

      # cmake . -DSRCML_TEST_INSTALLED=ON

      # - name: Set PATH for Windows
      #   shell: bash
      #   working-directory: build
      #   continue-on-error: true
      #   run: |
      #     echo "/c/Program Files/Greeting/bin" >> $GITHUB_PATH

      - name: Run Installed srcml in bash
        shell: bash
        working-directory: build
        continue-on-error: true
        run: |
          EOL="\r\n"
          echo $PATH
          ls -lh "/c/Program Files/Greeting/bin"
          Greeting

      - name: Run Installed srcml in Powershell
        working-directory: build
        continue-on-error: true
        run: |
          $Env:Path
          [Environment]::GetEnvironmentVariable("Path","User")
          [Environment]::GetEnvironmentVariable("Path","System")
          Greeting.exe

      - name: Check registry
        shell: bash
        working-directory: build
        continue-on-error: true
        run: |
          EOL="\r\n"
          reg query "HKEY_LOCAL_MACHINE\Software\Kitware\CMake\Packages\srcML"

      - name: Uninstall the package
        working-directory: build/dist
        continue-on-error: true
        run: msiexec /x D:\a\cmakewix\cmakewix\build\dist\Greeting-Win.msi /quiet /norestart /L*vx .\msi_uninstall.log
      - uses: actions/upload-artifact@v3
        with:
          name: msi_uninstall.log
          path: build/dist/msi_uninstall.log

      - name: Verify it will not run
        shell: bash
        working-directory: build
        continue-on-error: true
        run: |
          EOL="\r\n"
          echo $PATH
          reg query "HKEY_LOCAL_MACHINE\Software\Kitware\CMake\Packages\srcML"
          ls -lh "/c/Program Files/Greeting"
          Greeting
          echo $PATH
